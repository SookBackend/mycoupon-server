version: '3.8'

services:
  mycoupon:
    image: ${DOCKER_USERNAME}/${DOCKER_REPO}
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      DOCKER_USERNAME: ${DOCKER_USERNAME}
      DOCKER_REPO: ${DOCKER_REPO}
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PWD}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      JWT_SECRET_KEY: ${JWT_KEY}

      SPRING_PROFILES_ACTIVE: prod
      hibernate_ddl_auto: create

      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      - redis
    networks:
      - my_network
    restart: always
    command: ["./wait-for-it.sh", "redis:6379", "--", "java", "-jar", "app.jar"]

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - /var/log/nginx/mycoupon:/var/log/nginx/mycoupon
    depends_on:
      - mycoupon
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge