
name: CI/CD with Gradle

on:
  push:
    branches: ["main", "cicd"]
  pull_request:
    branches: ["main", "cicd"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set prod.yml
        run: |
          cd ./src/main/resources
          sed -i 's|${DB_URL}|'"${{ secrets.DB_URL }}"'|g' application-prod.yml
          sed -i 's|${DB_USER}|'"${{ secrets.DB_USER }}"'|g' application-prod.yml
          sed -i 's|${DB_PWD}|'"${{ secrets.DB_PWD }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_CLIENT_ID}|'"${{ secrets.KAKAO_CLIENT_ID }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_CLIENT_SECRET}|'"${{ secrets.KAKAO_CLIENT_SECRET }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_CLIENT_AUTHENTICATION_METHOD}|'"${{ secrets.KAKAO_CLIENT_AUTHENTICATION_METHOD }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_SCOPE}|'"${{ secrets.KAKAO_SCOPE }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_AUTH_GRANT_TYPE}|'"${{ secrets.KAKAO_AUTH_GRANT_TYPE }}"'|g' application-prod.yml
          sed -i 's|${KAKAO_REDIRECT_URI}|'"${{ secrets.KAKAO_REDIRECT_URI }}"'|g' application-prod.yml
          sed -i 's|${REDIS_PORT}|'"${{ secrets.REDIS_PORT }}"'|g' application-prod.yml
          sed -i 's|${REDIS_HOST}|'"${{ secrets.REDIS_HOST }}"'|g' application-prod.yml
          sed -i 's|${JWT_KEY}|'"${{ secrets.JWT_KEY }}"'|g' application-prod.yml
          

      - name: Grant permission
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        env:
          APP: "${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}"
          COMPOSE: "/home/ubuntu/docker-compose.yml"
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_KEY }}
          envs: APP, COMPOSE
          script: |
            sudo docker-compose -f $COMPOSE down --rmi all
            sudo docker pull $/$APP:latest
            sudo docker-compose -f $COMPOSE up -d
